import "std/nft_interface"

Contract BurnerNFT(
  collectionId: ByteVec,
  nftIndex: U256,
  tokenIdBurned: ByteVec,
  amountBurned: U256,
  burnedBy: ByteVec
) implements INFT {
  
  pub fn getTokenUri() -> ByteVec {

    // return the metadata for the NFT directly sending json data and not being dependent on IPFS or Arweave
    return b`data:application/json,{"name": "Burn ` ++ u256ToString!(nftIndex)  ++ b`", "attributes": [{"trait_type": "Amount burned", "value": ` ++ u256ToString!(amountBurned) ++ b`}, {"trait_type": "Timestamp", "value": `++ u256ToString!(blockTimeStamp!()) ++ b`}, {"trait_type": "Token Id", "value": "`++ tokenIdBurned ++ b`"},  {"trait_type": "Burner", "value": "`++ burnedBy ++ b`"}]}`
    
  }

  pub fn getCollectionIndex() -> (ByteVec, U256) {
    return collectionId, nftIndex
  }


}